#The main issue seems to be the handling of bets larger than cash

#  printf("\n\nEnter Bet: $");
#  scanf("%d", &bet);

#  if (bet > cash) //If player tries to bet more money than player has
#  {
#         printf("\nYou cannot bet more money than you have.");
#         printf("\nEnter Bet: ");
#         scanf("%d", &bet);
#         return bet;
#  }


#If the user enters a bet larger than cash, he will be prompted to enter a new bet

#But there's no check on the new bet, so the user can then enter any amount, like 1000001

#Then the user just has to win one time


import paramiko
import time

hostname = 'pwnable.kr'
port = 2222
username = 'blackjack'
password = 'guest'

client = paramiko.SSHClient()
client.set_missing_host_key_policy(paramiko.AutoAddPolicy()) 

try:
    while True:
        client.connect(hostname=hostname, port=port, username=username, password=password)
        channel = client.invoke_shell()

        time.sleep(1)
        print(channel.recv(4096).decode())

        channel.send('nc localhost 9009\n')
        time.sleep(3)
        print(channel.recv(4096).decode())
        channel.send('Y\n')
        time.sleep(1)

        print(channel.recv(4096).decode())

        channel.send('1\n')
        time.sleep(1)
        print(channel.recv(4096).decode())


        channel.send('600\n') #Amount is too high
        time.sleep(1)
        print(channel.recv(4096).decode())

        channel.send('1000001\n') #Now there's no check on the size of the bet.
        time.sleep(1)
        print(channel.recv(4096).decode())

        channel.send('H\n') #Let's hit once and hope that we win, otherwise just play again
        time.sleep(1)
        print(channel.recv(4096).decode())

        channel.send('S\n')
        time.sleep(1)
        result = channel.recv(4096).decode()
        if "You Win" in result:
            print("We won!!")
            channel.send('Y\n') #Let's hit once and hope that we win, otherwise just play again
            time.sleep(1)
            print(channel.recv(4096).decode())

            print(result)
            break
        else:
            print(result)
            client.close()
            continue
    
except KeyboardInterrupt:
    print("Exiting...")
finally:
    client.close()